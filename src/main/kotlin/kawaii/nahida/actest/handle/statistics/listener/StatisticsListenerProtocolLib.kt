package kawaii.nahida.actest.handle.statistics.listener

import com.comphenix.protocol.PacketType
import com.comphenix.protocol.events.ListenerPriority
import com.comphenix.protocol.events.PacketAdapter
import com.comphenix.protocol.events.PacketEvent
import kawaii.nahida.actest.ACTest
import kawaii.nahida.actest.handle.statistics.StatisticsManager

class StatisticsListenerProtocolLib(private val manager: StatisticsManager) : PacketAdapter(
    ACTest.instance,
    ListenerPriority.NORMAL,

    // 监听全部发包会导致服务端崩溃/断开连接等问题
    PacketType.Play.Client.TELEPORT_ACCEPT,
    PacketType.Play.Client.TILE_NBT_QUERY,
    PacketType.Play.Client.DIFFICULTY_CHANGE,
    PacketType.Play.Client.CHAT_ACK,
    PacketType.Play.Client.CHAT_COMMAND,
    PacketType.Play.Client.CHAT,
    PacketType.Play.Client.CHAT_SESSION_UPDATE,
    PacketType.Play.Client.CHUNK_BATCH_RECEIVED,
    PacketType.Play.Client.CLIENT_COMMAND,
    PacketType.Play.Client.SETTINGS,
    PacketType.Play.Client.TAB_COMPLETE,
    PacketType.Play.Client.CONFIGURATION_ACK,
    PacketType.Play.Client.ENCHANT_ITEM,
    PacketType.Play.Client.WINDOW_CLICK,
    PacketType.Play.Client.CLOSE_WINDOW,
    PacketType.Play.Client.CONTAINER_SLOT_STATE_CHANGED,
    PacketType.Play.Client.CUSTOM_PAYLOAD,
    PacketType.Play.Client.B_EDIT,
    PacketType.Play.Client.ENTITY_NBT_QUERY,
    PacketType.Play.Client.USE_ENTITY,
    PacketType.Play.Client.JIGSAW_GENERATE,
    PacketType.Play.Client.KEEP_ALIVE,
    PacketType.Play.Client.DIFFICULTY_LOCK,
    PacketType.Play.Client.POSITION,
    PacketType.Play.Client.POSITION_LOOK,
    PacketType.Play.Client.LOOK,
    PacketType.Play.Client.GROUND,
    PacketType.Play.Client.VEHICLE_MOVE,
    PacketType.Play.Client.BOAT_MOVE,
    PacketType.Play.Client.PICK_ITEM,
    PacketType.Play.Client.PING_REQUEST,
    PacketType.Play.Client.AUTO_RECIPE,
    PacketType.Play.Client.ABILITIES,
    PacketType.Play.Client.BLOCK_DIG,
    PacketType.Play.Client.ENTITY_ACTION,
    PacketType.Play.Client.STEER_VEHICLE,
    PacketType.Play.Client.PONG,
    PacketType.Play.Client.RECIPE_SETTINGS,
    PacketType.Play.Client.RECIPE_DISPLAYED,
    PacketType.Play.Client.ITEM_NAME,
    PacketType.Play.Client.RESOURCE_PACK_STATUS,
    PacketType.Play.Client.ADVANCEMENTS,
    PacketType.Play.Client.TR_SEL,
    PacketType.Play.Client.BEACON,
    PacketType.Play.Client.HELD_ITEM_SLOT,
    PacketType.Play.Client.SET_COMMAND_BLOCK,
    PacketType.Play.Client.SET_COMMAND_MINECART,
    PacketType.Play.Client.SET_CREATIVE_SLOT,
    PacketType.Play.Client.SET_JIGSAW,
    PacketType.Play.Client.STRUCT,
    PacketType.Play.Client.UPDATE_SIGN,
    PacketType.Play.Client.ARM_ANIMATION,
    PacketType.Play.Client.SPECTATE,
    PacketType.Play.Client.USE_ITEM,
    PacketType.Play.Client.BLOCK_PLACE,
    PacketType.Play.Client.TRANSACTION,
    PacketType.Play.Client.FLYING,
    PacketType.Play.Client.CHAT_PREVIEW,

    PacketType.Play.Server.BUNDLE,
    PacketType.Play.Server.SPAWN_ENTITY,
    PacketType.Play.Server.SPAWN_ENTITY_EXPERIENCE_ORB,
    PacketType.Play.Server.ANIMATION,
    PacketType.Play.Server.BLOCK_CHANGED_ACK,
    PacketType.Play.Server.BLOCK_BREAK_ANIMATION,
    PacketType.Play.Server.TILE_ENTITY_DATA,
    PacketType.Play.Server.BLOCK_ACTION,
    PacketType.Play.Server.BLOCK_CHANGE,
    PacketType.Play.Server.BOSS,
    PacketType.Play.Server.CHUNK_BATCH_FINISHED,
    PacketType.Play.Server.CHUNK_BATCH_START,
    PacketType.Play.Server.CHUNKS_BIOMES,
    PacketType.Play.Server.CLEAR_TITLES,
    PacketType.Play.Server.TAB_COMPLETE,
    PacketType.Play.Server.COMMANDS,
    PacketType.Play.Server.CLOSE_WINDOW,
    PacketType.Play.Server.WINDOW_ITEMS,
    PacketType.Play.Server.WINDOW_DATA,
    PacketType.Play.Server.SET_SLOT,
    PacketType.Play.Server.CUSTOM_CHAT_COMPLETIONS,
    PacketType.Play.Server.DAMAGE_EVENT,
    PacketType.Play.Server.DISGUISED_CHAT,
    PacketType.Play.Server.ENTITY_STATUS,
    PacketType.Play.Server.EXPLOSION,
    PacketType.Play.Server.UNLOAD_CHUNK,
    PacketType.Play.Server.GAME_STATE_CHANGE,
    PacketType.Play.Server.OPEN_WINDOW_HORSE,
    PacketType.Play.Server.HURT_ANIMATION,
    PacketType.Play.Server.INITIALIZE_BORDER,
    PacketType.Play.Server.KEEP_ALIVE,
    PacketType.Play.Server.MAP_CHUNK,
    PacketType.Play.Server.WORLD_EVENT,
    PacketType.Play.Server.WORLD_PARTICLES,
    PacketType.Play.Server.LIGHT_UPDATE,
    PacketType.Play.Server.MAP,
    PacketType.Play.Server.OPEN_WINDOW_MERCHANT,
    PacketType.Play.Server.REL_ENTITY_MOVE,
    PacketType.Play.Server.REL_ENTITY_MOVE_LOOK,
    PacketType.Play.Server.ENTITY_LOOK,
    PacketType.Play.Server.VEHICLE_MOVE,
    PacketType.Play.Server.OPEN_BOOK,
    PacketType.Play.Server.OPEN_WINDOW,
    PacketType.Play.Server.OPEN_SIGN_EDITOR,
    PacketType.Play.Server.PING,
    PacketType.Play.Server.PONG_RESPONSE,
    PacketType.Play.Server.AUTO_RECIPE,
    PacketType.Play.Server.CHAT,
    PacketType.Play.Server.PLAYER_COMBAT_END,
    PacketType.Play.Server.PLAYER_COMBAT_ENTER,
    PacketType.Play.Server.PLAYER_COMBAT_KILL,
    PacketType.Play.Server.PLAYER_INFO_REMOVE,
    PacketType.Play.Server.PLAYER_INFO,
    PacketType.Play.Server.LOOK_AT,
    PacketType.Play.Server.POSITION,
    PacketType.Play.Server.RECIPES,
    PacketType.Play.Server.ENTITY_DESTROY,
    PacketType.Play.Server.REMOVE_ENTITY_EFFECT,
    PacketType.Play.Server.RESET_SCORE,
    PacketType.Play.Server.REMOVE_RESOURCE_PACK,
    PacketType.Play.Server.ADD_RESOURCE_PACK,
    PacketType.Play.Server.RESPAWN,
    PacketType.Play.Server.ENTITY_HEAD_ROTATION,
    PacketType.Play.Server.MULTI_BLOCK_CHANGE,
    PacketType.Play.Server.SELECT_ADVANCEMENT_TAB,
    PacketType.Play.Server.SERVER_DATA,
    PacketType.Play.Server.SET_ACTION_BAR_TEXT,
    PacketType.Play.Server.SET_BORDER_CENTER,
    PacketType.Play.Server.SET_BORDER_LERP_SIZE,
    PacketType.Play.Server.SET_BORDER_SIZE,
    PacketType.Play.Server.SET_BORDER_WARNING_DELAY,
    PacketType.Play.Server.SET_BORDER_WARNING_DISTANCE,
    PacketType.Play.Server.CAMERA,
    PacketType.Play.Server.VIEW_CENTRE,
    PacketType.Play.Server.VIEW_DISTANCE,
    PacketType.Play.Server.SCOREBOARD_DISPLAY_OBJECTIVE,
    PacketType.Play.Server.ENTITY_METADATA,
    PacketType.Play.Server.ATTACH_ENTITY,
    PacketType.Play.Server.ENTITY_VELOCITY,
    PacketType.Play.Server.ENTITY_EQUIPMENT,
    PacketType.Play.Server.EXPERIENCE,
    PacketType.Play.Server.UPDATE_HEALTH,
    PacketType.Play.Server.SCOREBOARD_OBJECTIVE,
    PacketType.Play.Server.MOUNT,
    PacketType.Play.Server.SCOREBOARD_TEAM,
    PacketType.Play.Server.SCOREBOARD_SCORE,
    PacketType.Play.Server.UPDATE_SIMULATION_DISTANCE,
    PacketType.Play.Server.SET_SUBTITLE_TEXT,
    PacketType.Play.Server.UPDATE_TIME,
    PacketType.Play.Server.SET_TITLE_TEXT,
    PacketType.Play.Server.SET_TITLES_ANIMATION,
    PacketType.Play.Server.ENTITY_SOUND,
    PacketType.Play.Server.NAMED_SOUND_EFFECT,
    PacketType.Play.Server.START_CONFIGURATION,
    PacketType.Play.Server.STOP_SOUND,
    PacketType.Play.Server.SYSTEM_CHAT,
    PacketType.Play.Server.PLAYER_LIST_HEADER_FOOTER,
    PacketType.Play.Server.NBT_QUERY,
    PacketType.Play.Server.COLLECT,
    PacketType.Play.Server.ENTITY_TELEPORT,
    PacketType.Play.Server.TICKING_STATE,
    PacketType.Play.Server.TICKING_STEP_STATE,
    PacketType.Play.Server.ADVANCEMENTS,
    PacketType.Play.Server.UPDATE_ATTRIBUTES,
    PacketType.Play.Server.ENTITY_EFFECT,
    PacketType.Play.Server.RECIPE_UPDATE,
    PacketType.Play.Server.TAGS,
    ) {

    override fun onPacketSending(event: PacketEvent) {
        try {
            manager.getPlayerData(event.player).also { data ->
                data.ppss.add()
            }
        } catch (_: Throwable) { }
    }


    override fun onPacketReceiving(event: PacketEvent) {
        try {
            manager.getPlayerData(event.player).also { data ->
                data.ppsc.add()

                when(event.packet.type) {
                    PacketType.Play.Client.ARM_ANIMATION -> data.cps.add()
                }
            }
        } catch (_: Throwable) { }
    }
}